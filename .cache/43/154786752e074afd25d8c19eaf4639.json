{"id":"../node_modules/pixi.js/lib/filters/mask/mask.frag.mjs","dependencies":[{"name":"C:\\Users\\Dell\\AndroidStudioProjects\\Game_billiards\\Game-Project\\node_modules\\pixi.js\\lib\\filters\\mask\\mask.frag.mjs.map","includedInParent":true,"mtime":1710811402875},{"name":"C:\\Users\\Dell\\AndroidStudioProjects\\Game_billiards\\Game-Project\\package.json","includedInParent":true,"mtime":1710818535691},{"name":"C:\\Users\\Dell\\AndroidStudioProjects\\Game_billiards\\Game-Project\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1710811404351}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar fragment = exports.default = \"in vec2 vMaskCoord;\\nin vec2 vTextureCoord;\\n\\nuniform sampler2D uTexture;\\nuniform sampler2D uMaskTexture;\\n\\nuniform float uAlpha;\\nuniform vec4 uMaskClamp;\\n\\nout vec4 finalColor;\\n\\nvoid main(void)\\n{\\n    float clip = step(3.5,\\n        step(uMaskClamp.x, vMaskCoord.x) +\\n        step(uMaskClamp.y, vMaskCoord.y) +\\n        step(vMaskCoord.x, uMaskClamp.z) +\\n        step(vMaskCoord.y, uMaskClamp.w));\\n\\n    // TODO look into why this is needed\\n    float npmAlpha = uAlpha; \\n    vec4 original = texture(uTexture, vTextureCoord);\\n    vec4 masky = texture(uMaskTexture, vMaskCoord);\\n    float alphaMul = 1.0 - npmAlpha * (1.0 - masky.a);\\n\\n    original *= (alphaMul * masky.r * uAlpha * clip);\\n\\n    finalColor = original;\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"d38a58d0fd9459245efbdc0e3c49c919","cacheData":{"env":{}}}