{"id":"../node_modules/pixi.js/lib/_virtual/loadImageBitmap.worker.mjs","dependencies":[{"name":"D:\\Game-Project\\node_modules\\pixi.js\\lib\\_virtual\\loadImageBitmap.worker.mjs.map","includedInParent":true,"mtime":1710778042421},{"name":"D:\\Game-Project\\package.json","includedInParent":true,"mtime":1710778529165},{"name":"D:\\Game-Project\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1710778041522}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst WORKER_CODE = \"(function () {\\n    'use strict';\\n\\n    async function loadImageBitmap(url) {\\n      const response = await fetch(url);\\n      if (!response.ok) {\\n        throw new Error(`[WorkerManager.loadImageBitmap] Failed to fetch ${url}: ${response.status} ${response.statusText}`);\\n      }\\n      const imageBlob = await response.blob();\\n      const imageBitmap = await createImageBitmap(imageBlob);\\n      return imageBitmap;\\n    }\\n    self.onmessage = async (event) => {\\n      try {\\n        const imageBitmap = await loadImageBitmap(event.data.data[0]);\\n        self.postMessage({\\n          data: imageBitmap,\\n          uuid: event.data.uuid,\\n          id: event.data.id\\n        }, [imageBitmap]);\\n      } catch (e) {\\n        self.postMessage({\\n          error: e,\\n          uuid: event.data.uuid,\\n          id: event.data.id\\n        });\\n      }\\n    };\\n\\n})();\\n\";\nlet WORKER_URL = null;\nclass WorkerInstance {\n  constructor() {\n    if (!WORKER_URL) {\n      WORKER_URL = URL.createObjectURL(new Blob([WORKER_CODE], {\n        type: 'application/javascript'\n      }));\n    }\n    this.worker = new Worker(WORKER_URL);\n  }\n}\nexports.default = WorkerInstance;\nWorkerInstance.revokeObjectURL = function revokeObjectURL() {\n  if (WORKER_URL) {\n    URL.revokeObjectURL(WORKER_URL);\n    WORKER_URL = null;\n  }\n};"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"71e6ed2a4e255990f57b9948b93a0b92","cacheData":{"env":{}}}